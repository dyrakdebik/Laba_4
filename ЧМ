#include <iostream>
#include <string>
#include <locale>
#include <ctype.h>
#include <iomanip>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
int main() {
	setlocale(LC_ALL, "");
	char  slash = '/', point = '.';
	int i = 0;
	const double e = 2.718281828459045
	double x, c, a, b, a0, fa, fb, fx = 1, fa1 = 1, fb1, fx1, x1, fx2;
	cout << "Введите начальное значение отрезка - ";
	cin >> a;
	cout << "Введите конечное значение отрезка - ";
	cin >> b;
	cout << "Введите точноть - ";
	cin >> c;
	if (a > b) {
		a0 = a;
		a = b;
		b = a0;
	}
	fa = pow((a - 1), 2) - 0.5 * pow(e, a);
	fb = pow((b - 1), 2) - 0.5 * pow(e, b);
	cout << endl << "ДИХОТОМИЯ - (x-1)^2 - 0,5e^x = 0, x[0; 1]";
	if (fa * fb < 0) {
		i = 0;
		while (true) {
			i++;
			x = (b + a) / 2;
			fa = pow((a - 1), 2) - 0.5 * pow(e, a);
			fx = pow((x - 1), 2) - 0.5 * pow(e, x);
			if (fa * fx >= 0) {
				a = x;
				b = b;
			}
			else {
				a = a;
				b = x;
			}
			cout << endl << "x - " << x << " f(x) - " << fx << " i - " << i << endl;
			if ((fx - c) * (fx + c) < 0) {
				cout << endl << endl << "x - " << x << " f(x) - " << fx << " i - " << i << endl;
				break;
			}
		}
	}
	cout << endl << endl << "ИТЕРАЦИИ" << endl;
	fx = 1;
	cout << "Введите начальное значение отрезка - ";
	cin >> a;
	cout << "Введите конечное значение отрезка - ";
	cin >> b;
	fa = pow((a - 1), 2) - 0.5 * pow(e, a);
	fb = pow((b - 1), 2) - 0.5 * pow(e, b);
	fa1 = (-0.5 * pow(e, a) + pow(2, a)) / 2;
	if (fa * fb < 0) {
		if (fa * fb < 0)
			i = 0;
		while (true) {
			i++;
			fa1 = (-0.5 * pow(e, a) + pow(a, 2) + 1) / 2;
			fx = abs(fa1 - a);
			a = fa1;
			cout << endl << "x - " << x << " f(x) - " << fx << " i - " << i << endl;
			if ((fx - c) * (fx + c) < 0) {
				cout << endl << endl << "x - " << x << " f(x) - " << fx << " i - " << i << endl;
				break;
			}
		}
	}
	#include <iostream>
#include <string>
#include <locale>
#include <ctype.h>
#include <iomanip>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
int main() {
	setlocale(LC_ALL, "");
	int i = 0;
	const double e = 2.718281828459045;
	double x, c, a, b, a0, b0, fa, fb, fx = 1, fa1 = 1, fb1, fx1, x1, fx2, fa2, fb2, pribl;
	cout << "----НЬЮТОНА----\n";
	cout << "Введите начальное значение отрезка - ";
	cin >> a;
	cout << "Введите конечное значение отрезка - ";
	cin >> b;
	cout << "Введите точноть - ";
	cin >> c;
	i = 1;
	fa = pow((a - 1), 2) - 0.5 * pow(e, a);
	fb = pow((b - 1), 2) - 0.5 * pow(e, b);
	fa2 = 2 - 0.5 * pow(e, a);
	fb2 = 2 - 0.5 * pow(e, b);
	a0 = fa * fa2;
	b0 = fb * fb2;
	if (a0 > 0)
		pribl = a0;
	else
		pribl = b0;
	x = pribl;
	cout << endl << x << endl;
	fx = pow((x - 1), 2) - 0.5 * pow(e, x);
	fx1 = 2 * x - 0.5 * pow(e, x) - 2;
	x1 = x - fx / fx1;
	cout << endl << endl << "x - " << x1 << " i - " << i << endl;
	while (fabs(x1-x) > c) {
		i++;
		x = x1;
		fx = pow((x - 1), 2) - 0.5 * pow(e, x);
		fx1 = 2 * x - 0.5 * pow(e, x) - 2;
		x1 = x - fx / fx1;
		cout << endl << endl << "x - " << x1 <<  " i - " << i << endl;
	}
	cout << "----ХОРДЫ----\n";
	cout << "Введите начальное значение отрезка - ";
	cin >> a;
	cout << "Введите конечное значение отрезка - ";
	cin >> b;
	cout << "Введите точноть - ";
	cin >> c;
	i = 0;
	do {
		i++;
		x1 = x;
		x = a - ((b - a) / (fb - fa)) * fa;
		fx = pow((x - 1), 2) - 0.5 * pow(e, x);
		if (fa * fx >= 0)
			a = x;
		else
			b = x;
		cout << endl << endl << "x - " << x << " i - " << i << endl;
	} while (fabs(x1 - x) > c);
}












//////////////////////////////////////////////////////////////////////////////////
#include <iostream>
#include <string>
#include <locale>
#include <ctype.h>
#include <iomanip>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
double f1xx(double x) {
	return 1;
}
double f1xy(double y) {
	return -sin(y);
}
double g1yx(double x) {
	return -cos((2 * x - 1) / 2);
}
double g1yy(double y) {
	return 2;
}
double f(double x, double y) {
	return cos(y) + x - 1.5;
}
double g(double x, double y) {
	return 2 * y - sin(x - 0.5) - 1;
}
int main() {
	setlocale(LC_ALL, "");
	const double e = 2.718281828459045;
	double x, y, c, delx, dely, x1, y1, i;
	// cosy+x=1.5 and 2y-sin(x-0.5)=1
	cout << endl << "----Ньютона----" << endl;
	cout << "Введите начальное значение (х) - ";
	cin >> x;
	cout << "Введите конечное значение (у) - ";
	cin >> y;
	cout << "Введите точность - ";
	cin >> c;
	i = 0;
	while (i < 1000) {
		dely = (-g(x, y) * f1xx(x) - g1yx(x) * (-f(x, y))) / (g1yy(y) * f1xx(x) - g1yx(x) * f1xy(y));
		delx = (-f(x, y) - f1xy(y) * dely) / f1xx(x);
		x1 = x + delx;
		y1 = y + dely;
		i++;
		if (fabs(delx) < c || fabs(dely) < c) {
			cout << endl << "x1 - " << x1 << endl << "y1 - " << y1 << endl << "i - " << i << endl;
			break;
		}
		x = x1;
		y = y1;
	}
	cout << endl << "----Итерации----" << endl;
	cout << "Введите начальное значение (х) - ";
	cin >> x;
	cout << "Введите конечное значение (у) - ";
	cin >> y;
	cout << "Введите точность - ";
	cin >> c;
	i = 1;
	x1 = (1.5 - cos(y));
	y1 = (1 + sin(x - 0.5)) / 2;
	while ((fabs(x - x1) > c) || (fabs(y - y1) > c)) {
		i++;
		x = x1;
		y = y1;
		x1 = (1.5 - cos(y));
		y1 = (1 + sin(x - 0.5)) / 2;
		cout << endl << "x1 - " << x1 << endl << "y1 - " << y1 << endl << "i - " << i << endl;
	}
}



/////////////////////////////////////////////////////////
#include <iostream>
#include <string>
#include <locale>
#include <ctype.h>
#include <iomanip>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
int main() {
	setlocale(LC_ALL, "");
	long double U[100], V[100], x[100], k, d, a=1, b=2, c=1;
	int i;

	cout << "Введите свой вариант - ";
	cin >> k;

	d = 10 * k;
	U[1] = -0.5;
	V[1] = d / 2;
	for (i = 2; i < 100; i++) {
		U[i] = -1 * (c / (a * U[i - 1] + b));
		V[i] = (d - a * V[i - 1]) / (a * U[i - 1] + b);
	}
	i = 100;
	U[i] = 0;
	V[i] = (d - a * V[i - 1]) / (a * U[i - 1] + b);
	////////////////////////
	x[i] = (d - a * V[i - 1]) / (a * U[i - 1] + b);
	for (i = 99; i > 0; i--) 
		x[i] = U[i] * x[i + 1] + V[i];

	for (i = 1; i <= 100; i++)
		cout << "X - " << x[i] << ", i - " << i << endl;
}

/////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <locale>
#include <ctype.h>
#include <iomanip>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
double f(double x) {
	return sqrtl(1 + 2 * log(x)) / x;
}
int main() {
	setlocale(LC_ALL, "");
	double a,a1, b, c, pr=0, st, i, x0;

	cout << "Введите значение левого конца - ";
	cin >> a;
	cout << "Введите значение правого конца - ";
	cin >> b;
	cout << "Кол-во разбиений - " << endl;
	cin >> c;
	if (b < a) {
		a1 = a;
		a = b;
		b = a1;
	}
	st = (b - a) / c;
	for (i = 0; i <= c; i++) {
		x0 = a + i * st;
		pr = pr + (st * f(x0));
	}
	cout << "pr - " << pr << endl;
}



////////////////////////////
#include <iostream>
#include <conio.h>
#include <locale>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
double f(double x) {
	return (sqrt(1 + 2 * log(x))) / x;
}
double f1(double x) {
	return sin(x);
}
int main() {
	setlocale(LC_ALL, "");
	double a, b, a1, dl, b1, n, x=0, x1, x0, i, pi = 3.1415926535897932384626433832795;
	cout << "Введите начальное значение - ";
	cin >> a;
	cout << "Введите конечное значение - ";
	cin >> b;
	cout << "Введите кол-во разбиений - ";
	cin >> n;
	//b = pi / 2;
	dl = (b - a) / n;
	for (i = 0; i < n; i++) {
		x += f(a) * dl;
		a += dl;
	}
	cout << x << endl;
}


////////////////////////////////////////////

#include <iostream>
#include <conio.h>
#include <locale>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
double f(double x) {
	return (sqrt(1 + 2 * log(x))) / x;
}
double f1(double x) {
	return sin(x);
}
int main() {
	setlocale(LC_ALL, "");
	double a, b, a1, dl, b1, n, x=0, x1=0, x0, i, pi = 3.1415926535897932384626433832795;
	cout << "Введите начальное значение - ";
	cin >> a;
	cout << "Введите конечное значение - ";
	cin >> b;
	cout << "Введите кол-во разбиений - ";
	cin >> n;
	//b = pi / 2;
	dl = (b - a) / n;
	for (i = 1; i <= n; i++) {
		x = (f(a)+(f(a+dl)))/2;
		x1 += x * dl;
		a += dl;
	}
	cout << x1 << endl << a;
}

(((((((((((((((((
#include <iostream>
#include <conio.h>
#include <locale>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
double f(double x) {
	return (sqrt(1 + 2 * log(x))) / x;
}
double f1(double x) {
	return sin(x);
}
int main() {
	setlocale(LC_ALL, "");
	double a, b, a1, dl, b1, n, x=0, x1=0, x0, i, pi = 3.1415926535897932384626433832795;
	cout << "Введите начальное значение - ";
	cin >> a;
	cout << "Введите конечное значение - ";
	cin >> b;
	cout << "Введите кол-во разбиений - ";
	cin >> n;
	//b = pi / 2;
	dl = (b - a) / n;
	x0 = 0.5 * (f(a) + f(b));
	a += dl;
	for (i = 0; i < n-1; i++) {
		x += f(a);
		a += dl;
	}
	x1 = dl * (x0 + x);
	cout << x1 << endl << a;
})))))))))))))))

///////////////////////////////////////////

/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include <conio.h>
#include <locale>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
double f(double x) {
	return (sqrt(1 + 2 * log(x))) / x;
}
double f1(double x) {
	return asin(2*x);
}
int main() {
	setlocale(LC_ALL, "");
	double zd, a, b, a1, dl, b1, n, x = 0, x1 = 0, x0, i, pi = 3.1415926535897932384626433832795, intg = 7.508609742995709;
	cout << "Выберите задание:\n1.Метод прямоугольников\n2.Метод трапеции\n3.Метод Симпсона" << endl;
	cin >> zd;
	if (zd == 1) {
		a = 2;
		b = 50;
		cout << "Введите кол-во разбиений - ";
		cin >> n;
		dl = (b - a) / n;
		for (i = 0; i < n; i++) {
			x += f(a) * dl;
			a += dl;
		}
		cout << x << endl;
		cout << "Погрешность - " << fabs(x - intg) << endl;
	}
	if (zd == 2) {
		a = 2;
		b = 50;
		cout << "Введите кол-во разбиений - ";
		cin >> n;
		dl = (b - a) / n;
		x0 = 0.5 * (f(a) + f(b));
		a += dl;
		for (i = 0; i < n - 1; i++) {
			x += f(a);
			a += dl;
		}
		x1 = dl * (x0 + x);
		cout << x1 << endl;
		cout << "Погрешность - " << fabs(x1 - intg) << endl;
	}
	if (zd == 3) {
		a = 2;
		b = 50;
		cout << "Введите кол-во отрезков (чётное) - ";
		cin >> n;
		if ((int)n % 2 == 1) {
			cout << "Ну и зачем? Я ведь попросил...";
			n++;
		}
		dl = (b - a) / n;
		x = f(a);
		a += dl;
		for (i = 1; i <= n - 1; i++) {
			if ((int)i % 2 == 1)
				x += 4 * f(a);
			else
				x += 2 * f(a);
			a += dl;
		}
		x += f(b);
		x = (dl / 3) * x;
		cout << "X == " << x << endl;
		cout << fabs(x - intg) << endl;
	}
}





///////////////////////////////////////////////////
////////////////////////////////////////////////////
///////////////////////////////////////////////////
#include <iostream>
#include <conio.h>
#include <locale>
#include <math.h>
#define _CRT_SECURE_NO_WARNINGS 1
using namespace std;
class employee {
private:
	int nomer;
	float pocob;
public:
	void vvod() {
		cout << "Введите номер сотрудника - ";
		cin >> nomer;
		cout << "Введите пособие - ";
		cin >> pocob;
	}
	void vivod() {
		cout << "Номер сотрудникa - " << nomer << endl;
		cout << "Пособие сотрудника - " << pocob << endl;
	}
};
class date {
	unsigned int day, month, year;
	char slash = '/';
public:
	void vvodd() {
		cout << "Введите дату через слэш - ";
		cin >> day >> slash >> month >> slash >> year;
	}
	void vivodd() {
		cout << day << slash << month << slash << year << endl;
	}
};
enum dolj {
	laborer,
	secretary,
	manager,
	accountant,
	executive,
	researcher
};

class employee№6 {
private:
	int nomer;
	float pocob;
	dolj rab;
	date data;
public:
	void getemploy() {
		unsigned int day, month, year;
		char slash = '/', doljn;
		cout << "Введите номер сотрудника";
		cin >> nomer;
		cout << "Введите номер сотрудника";
		cin >> pocob;
		cout << " Введите дату приема сотрудника через слэш - ";
		cin >> month >> slash >> day >> slash >> year;
		data.vvodd();
		cout << "Введите первую букву должности (laborer, secretary, manager, accountant, executive, researcher) - ";
		cin >> doljn;
		switch (doljn)
		{
		case 'l':
			rab = dolj::laborer;
			break;
		case 's':
			rab = dolj::secretary;
			break;
		case 'm':
			rab = dolj::manager;
			break;
		case 'a':
			rab = dolj::accountant;
			break;
		case 'e':
			rab = dolj::executive;
			break;
		case 'r':
			rab = dolj::researcher;
			break;
		default:
			cout << "Неизвестная должность!";
			break;
		}
	}
	void putemploy() {
		cout << endl << "///////////////////////////   ИНФОРМАЦИЯ  //////////////////////";
		cout << endl << "Номер сотрудника - " << nomer;
		cout << endl << "Пособие сотрудника - " << pocob;
		cout << endl << "Дата приема на работу - ";
		data.vivodd();
		switch (rab) {
		case laborer:
			cout << "Должность - laborer";
			break;
		case secretary:
			cout << "Должность - secretary\n";
			break;
		case manager:
			cout << "Должность - manager\n";
			break;
		case accountant:
			cout << "Должность - accountant\n";
			break;
		case executive:
			cout << "Должность - executive\n";
			break;
		case researcher:
			cout << "Должность - researcher\n";
			break;
		default:
			cout << "Неизвестная должность";
			break;
		}
	}
};
class angle {
	int gradys;
	float min;
	char naprav;
public:
	angle() {}
	angle(int gradys1, float min1, char naprav1) : gradys(gradys1), min(min1), naprav(naprav1) {}
	void vvodkoor() {
		cout << "Введите градусы - ";
		cin >> gradys;
		cout << endl << "Введите минуты - ";
		cin >> gradys;
		cout << endl << "Введите направление - ";
		cin >> gradys;
	}
	void vivodkoor() {
		cout << gradys << '\xB0' << min << "\' " << naprav;
	}
};
/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Koordi() {
	angle position1(1, 2, 'S'), position2(11, 23, 'W');
	char da;
	cout << "Координаты - ";
	position1.vivodkoor(); cout << " ,"; position2.vivodkoor();
	do {
		cout << endl;
		cout << "Широта. ";
		position1.vvodkoor();
		cout << "Долгота. ";
		position2.vvodkoor();
		cout << "Ваши координаты - " << endl;
		cout << "широта: ";
		position1.vivodkoor();
		cout << ", долгота: ";
		position2.vivodkoor();
		cout << endl << "Продолжаем? (Y/N) ";
		cin >> da;
	} while (da != 'N');
}
/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class PorydNomer {
private:
	int nomer;
	int static count;
public:
	PorydNomer() {
		count++;
		nomer = count;
	}
	void main() {
		cout << "Порядковый номер - " << nomer << endl;
	}
};
int PorydNomer::count = 0;

class fraction {
private:
	int chisl, znam;
	char slash = '/';
public:
	void vvoddrob() {
		cout << "Введите дробь - ";
		cin >> chisl >> slash >> znam;
	}
	void vivoddrob() {
		cout << chisl << slash << znam;
	}
	void sum(fraction f1, fraction f2) {
		chisl = f1.chisl * f2.znam + f2.chisl * f1.znam;
		znam = f1.znam * f2.znam;
	}
};
void mainsumdrob() {
	char da;
	fraction f1, f2, f3;
	do {
		f1.vvoddrob();
		f2.vvoddrob();
		f3.sum(f1, f2);
		cout << "Сумма дробей - ";
		f3.vivoddrob();
		cout << endl;
		cout << "Продолжить? (Y/N) ";
		cin >> da;
		cout << endl;
	} while (da != 'N');
}
class ship {
private:
	int nomer;
	static int count;
	angle position1;
	angle position2;
public:
	ship() {
		count++;
		nomer = count;
	}
	void vvodship() {
		cout << "Корабль " << nomer << ". Введите его координаты - ";
		cout << "Широта. ";
		position1.vvodkoor();
		cout << "Долгота. ";
		position2.vvodkoor();
		cout << endl;
	}
	void vivodship() {
		cout << "Корабль " << nomer << ". Координаты его расположения - ";
		cout << "широта: ";
		position1.vivodkoor();
		cout << ", долгота: ";
		position2.vivodkoor();
		cout << endl << endl;
	}
};
int ship::count = 0;
class fraction11 {
private:
	int chisl, del;
public:
	fraction11() {}
	fraction11(int n, int d) : chisl(n), del(d) { }
	void get() {
		char slash;
		cout << "Введите дробь - ";
		cin >> chisl >> slash >> del;
	}
	void show() {
		cout << "Результат - " << chisl << '/' << del << endl;
	}
	void add(fraction11 f1, fraction11 f2) {
		chisl = f1.chisl * f2.del + f2.chisl * f1.del;
		del = f1.del * f2.del;
		lowterms();
	}
	void sub(fraction11 f1, fraction11 f2) {
		chisl = f1.chisl * f2.del - f2.chisl * f1.del;
		del = f1.del * f2.del;
		lowterms();
	}
	void mul(fraction11 f1, fraction11 f2) {
		chisl = f1.chisl * f2.chisl;
		del = f1.del * f2.del;
		lowterms();
	}
	void div(fraction11 f1, fraction11 f2) {
		chisl = f1.chisl * f2.del;
		del = f1.del * f2.chisl;
		lowterms();
	}
	void lowterms();
};
class fraction12 {
private:
	int chisl, del;
public:
	fraction12() { }
	fraction12(int n, int d) : chisl(n), del(d) {
		lowterms();
	}
	void get() {
		char slash;
		cout << "Введите дробь - ";
		cin >> chisl >> slash >> del;
		lowterms();
	}
	void show(int width = 5) {
		int i = 1, chisl0 = chisl, del0 = del;
		while (chisl0) {
			chisl0 = chisl0 / 10; i++;
		}
		while (del0) {
			del0 = del0 / 10; i++;
		}
		cout << chisl << '/' << del;
	}
	void add(fraction12 f1, fraction12 f2) {
		chisl = f1.chisl * f2.del + f2.chisl * f1.del;
		del = f1.del * f2.del;
		lowterms();
	}
	void sub(fraction12 f1, fraction12 f2) {
		chisl = f1.chisl * f2.del - f2.chisl * f1.del;
		del = f1.del * f2.del;
		lowterms();
	}
	void mul(fraction12 f1, fraction12 f2) {
		chisl = f1.chisl * f2.chisl;
		del = f1.del * f2.del;
		lowterms();
	}
	void div(fraction12 f1, fraction12 f2) {
		chisl = f1.chisl * f2.del;
		del = f1.del * f2.chisl;
		lowterms();
	}
	void lowterms();
};
void fraction11::lowterms() {
	long chisl0, del0, temp, gcd;
	chisl0 = labs(chisl);
	del0 = labs(del);
	if (del0 == 0) {
		cout << "Знаменатель не может быть равен 0";
		exit(1);
	}
	else if (chisl0 == 0) {
		chisl = 0; del = 1;
		return;
	}
	while (chisl0 != 0) {
		if (chisl0 < del0) {
			temp = chisl0; chisl0 = del0; del0 = temp;
		}
		chisl0 = chisl0 - del0;
	}
	gcd = del0;
	chisl = chisl / gcd;
	del = del / gcd;
}
void fraction12::lowterms() {
	long chisl0, del0, temp, gcd;
	chisl0 = labs(chisl);
	del0 = labs(del);
	if (del0 == 0) {
		cout << "Знаменатель не может быть равен 0";
		////////////////////////////////////////////////////////////////////////exit(1);
	}
	else if (chisl0 == 0) {
		chisl = 0; del = 1;
		return;
	}
	while (chisl0 != 0) {
		if (chisl0 < del0) {
			temp = chisl0; chisl0 = del0; del0 = temp;
		}
		chisl0 = chisl0 - del0;
	}
	gcd = del0;
	chisl = chisl / gcd;
	del = del / gcd;
}
int main() {
	setlocale(0, "");
	int zadanie, del, thum, del0;
	char oper, da;
	cout << "Введите задание(4- 12):";
	cin >> zadanie;
	if (zadanie == 4) {
		employee emp1, emp2, emp3;
		emp1.vvod();
		emp1.vivod();
		emp2.vvod();
		emp2.vivod();
		emp3.vvod();
		emp3.vivod();
	}
	else if (zadanie == 5) {
		date dat;
		dat.vvodd();
		dat.vivodd();
	}
	else if (zadanie == 6) {
		employee№6 emp21;
		emp21.getemploy();
		emp21.putemploy();
	}
	else if (zadanie == 7) {
		Koordi();
	}
	else if (zadanie == 8) {
		PorydNomer obj1, obj2, obj3;
		obj1.main();
		obj2.main();
		obj3.main();
	}
	else if (zadanie == 8) {
		mainsumdrob();
	}
	else if (zadanie == 10) {
		ship s1, s2, s3;
		s1.vvodship();
		s2.vvodship();
		s3.vvodship();
		s1.vivodship();
		s2.vivodship();
		s3.vivodship();
	}
	else if (zadanie == 11) {
		fraction11 fr1, fr2, fr3;
		do {
			fr1.get();
			cout << "Операция: ";
			cin >> oper;
			fr2.get();
			switch (oper) {
			case '+':
				fr3.add(fr1, fr2);
				fr3.show();
				break;
			case '-':
				fr3.sub(fr1, fr2);
				fr3.show();
				break;
			case '*':
				fr3.mul(fr1, fr2);
				fr3.show();
				break;
			case '/':
				fr3.div(fr1, fr2);
				fr3.show();
				break;
			default: cout << "Неизвестная операция" << endl;
			}
			cout << "Продолжаем? (Y/N)"; 
			cin >> da;
		} while (da != 'N');
	}
	else if (zadanie == 12) {
		cout << "Введите знаменатель дроби - ";
		cin >> del;
		cout << endl;
		chisl0 = del - 1;
		del0 = del;
		while (chisl0) {
			chisl0 = chisl0 / 10;
		}
		while (del0) {
			del0 = del0 / 10;
		}
		chisl0 = del * del - 1;
		del0 = del * del;
		while (chisl0) {
			chisl0 = chisl0 / 10;
		}
		while (del0) {
			del0 = del0 / 10;
		}
		for (int chisl1 = 1; chisl1 < del; chisl1++) {
			fraction12 f1(chisl1, del);
			f1.show();
		}
		cout << endl << endl;
		for (int chisl1 = 1; chisl1 < del; chisl1++) {
			fraction12 f1(chisl1, del);
			f1.show();
			for (int num2 = 1; num2 < del; num2++) {
				fraction12 f2(num2, del), f;
				f.mul(f1, f2);
				f.show();
			}
			cout << endl;
		}
	}
	return 0;
}
