
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
#include <stdio.h>
#include <math.h>
#include <locale.h>
#include <time.h>
#define _CRT_SECURE_NO_WARNINGS 1
int main() {
	setlocale(LC_ALL, "");
	int arr[1000], arr1[10000], arr2[100000], i, j, k, n = sizeof(arr) / sizeof(int), n1 = sizeof(arr1) / sizeof(int), n2 = sizeof(arr2) / sizeof(int), o, z;
	float opt = 1.247;
	printf("Выберите сортировку:\n1.Пузырёк\n2.Расчёска\n3.Вставками\n4.Шелла\n5.Выбором\n6.Гномья\n___");
	scanf("%d", &z);
	for (i = 0; i < n; i++) {
		arr[i] = rand() % 1000000;
	}
	for (i = 0; i < n1; i++) {
		arr1[i] = rand() % 1000000;
	}
	for (i = 0; i < n2; i++) {
		arr2[i] = rand() % 1000000;
	}
	if (z == 1) {
		clock_t tic = clock();
		for (i = 0; i < n - 1; i++) {
			for (j = 0; j < n - 1 - i; j++) {
				if (arr[j] > arr[j + 1]) {
					k = arr[j];
					arr[j] = arr[j + 1];
					arr[j + 1] = k;
				}
			}
		}
		clock_t toc = clock();
		printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
		clock_t tic1 = clock();
		for (i = 0; i < n1 - 1; i++) {
			for (j = 0; j < n1 - 1 - i; j++) {
				if (arr1[j] > arr1[j + 1]) {
					k = arr1[j];
					arr1[j] = arr1[j + 1];
					arr1[j + 1] = k;
				}
			}
		}
		clock_t toc1 = clock();
		printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
		clock_t tic2 = clock();
		for (i = 0; i < n2 - 1; i++) {
			for (j = 0; j < n2 - 1 - i; j++) {
				if (arr2[j] > arr2[j + 1]) {
					k = arr2[j];
					arr2[j] = arr2[j + 1];
					arr2[j + 1] = k;
				}
			}
		}
		clock_t toc2 = clock();
		printf("Время - %f секунд (100к эл)\n", (double)(toc2 - tic2) / CLOCKS_PER_SEC);
	}
	if (z == 2) {
		clock_t tic = clock();
		for (j = n - 1; j >= 1; j /= opt) {
			for (i = 0; i < n - j; i++) {
				if (arr[i] > arr[i + j]) {
					k = arr[i];
					arr[i] = arr[i + j];
					arr[i + j] = k;
				}
			}
		}
		clock_t toc = clock();
		printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
		clock_t tic1 = clock();
		for (j = n1 - 1; j >= 1; j /= opt) {
			for (i = 0; i < n1 - j; i++) {
				if (arr1[i] > arr1[i + j]) {
					k = arr1[i];
					arr1[i] = arr1[i + j];
					arr1[i + j] = k;
				}
			}
		}
		clock_t toc1 = clock();
		printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
		clock_t tic2 = clock();
		for (j = n2 - 1; j >= 1; j /= opt) {
			for (i = 0; i < n2 - j; i++) {
				if (arr2[i] > arr2[i + j]) {
					k = arr2[i];
					arr2[i] = arr2[i + j];
					arr2[i + j] = k;
				}
			}
		}
		clock_t toc2 = clock();
		printf("Время - %f секунд (100к эл)\n", (double)(toc2 - tic2) / CLOCKS_PER_SEC);
	}
	if (z == 3) {
		clock_t tic = clock();
		for (i = 1; i < n; i++) {
			for (j = i, k = arr[i]; (j > 0) && (arr[j - 1] > k); j--) {
				arr[j] = arr[j - 1];
			}
			arr[j] = k;
		}
		clock_t toc = clock();
		printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
		clock_t tic1 = clock();
		for (i = 1; i < n1; i++) {
			for (j = i, k = arr1[i]; (j > 0) && (arr1[j - 1] > k); j--) {
				arr1[j] = arr1[j - 1];
			}
			arr1[j] = k;
		}
		clock_t toc1 = clock();
		printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
		clock_t tic2 = clock();
		for (i = 1; i < n2; i++) {
			for (j = i, k = arr2[i]; (j > 0) && (arr2[j - 1] > k); j--) {
				arr2[j] = arr2[j - 1];
			}
			arr2[j] = k;
		}
		clock_t toc2 = clock();
		printf("Время - %f секунд (100к эл)\n", (double)(toc2 - tic2) / CLOCKS_PER_SEC);
	}
	if (z == 4) {
		clock_t tic = clock();
		for (o = n / 2; o > 0; o = o / 2) {
			for (i = o; i < n; i++) {
				k = arr[i];
				for (j = i; j >= o; j = j - o) {
					if (k < arr[j - o])
						arr[j] = arr[j - o];
					else break;
				}
				arr[j] = k;
			}
		}
		clock_t toc = clock();
		printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
		clock_t tic1 = clock();
		for (o = n1 / 2; o > 0; o = o / 2) {
			for (i = o; i < n1; i++) {
				k = arr1[i];
				for (j = i; j >= o; j = j - o) {
					if (k < arr1[j - o])
						arr1[j] = arr1[j - o];
					else break;
				}
				arr1[j] = k;
			}
		}
		clock_t toc1 = clock();
		printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
		clock_t tic2 = clock();
		for (o = n2 / 2; o > 0; o = o / 2) {
			for (i = o; i < n2; i++) {
				k = arr2[i];
				for (j = i; j >= o; j = j - o) {
					if (k < arr2[j - o])
						arr2[j] = arr2[j - o];
					else break;
				}
				arr2[j] = k;
			}
		}
		clock_t toc2 = clock();
		printf("Время - %f секунд (100к эл)\n", (double)(toc2 - tic2) / CLOCKS_PER_SEC);
	}
	if (z == 5) {
		clock_t tic = clock();
		for (i = 0; i < n - 1; i++) {
			for (j = i + 1, o = i; j < n; j++) {
				if (arr[j] < arr[o])
					o = j;
			}
			k = arr[i];
			arr[i] = arr[o];
			arr[o] = k;
		}
		clock_t toc = clock();
		printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
		clock_t tic1 = clock();
		for (i = 0; i < n1 - 1; i++) {
			for (j = i + 1, o = i; j < n1; j++) {
				if (arr1[j] < arr1[o])
					o = j;
			}
			k = arr1[i];
			arr1[i] = arr1[o];
			arr1[o] = k;
		}
		clock_t toc1 = clock();
		printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
		clock_t tic2 = clock();
		for (i = 0; i < n2 - 1; i++) {
			for (j = i + 1, o = i; j < n2; j++) {
				if (arr2[j] < arr2[o])
					o = j;
			}
			k = arr2[i];
			arr2[i] = arr2[o];
			arr2[o] = k;
		}
		clock_t toc2 = clock();
		printf("Время - %f секунд (100к эл)\n", (double)(toc2 - tic2) / CLOCKS_PER_SEC);
	}
	if (z == 6) {
		clock_t tic = clock();
		for (i = 1; i < n; i++) {
			for (j = 2; j < n; j++) {
				if (arr[i - 1] > arr[i]) {
					k = arr[i];
					arr[i] = arr[i - 1];
					arr[i - 1] = k;
					i = i - 1;
				}
			}
		}
		clock_t toc = clock();
		printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
		clock_t tic1 = clock();
		for (i = 1; i < n1; i++) {
			for (j = 2; j < n1; j++) {
				if (arr1[i - 1] > arr1[i]) {
					k = arr1[i];
					arr1[i] = arr1[i - 1];
					arr1[i - 1] = k;
					i = i - 1;
				}
			}
		}
		clock_t toc1 = clock();
		printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
		clock_t tic2 = clock();
		for (i = 1; i < n2; i++) {
			for (j = 2; j < n2; j++) {
				if (arr2[i - 1] > arr2[i]) {
					k = arr2[i];
					arr2[i] = arr2[i - 1];
					arr2[i - 1] = k;
					i = i - 1;
				}
			}
		}
		clock_t toc2 = clock();
		printf("Время - %f секунд (100к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
	}
}

////////////////////////////////////////////////
#include <stdio.h>
#include <math.h>
#include <locale.h>
#include <time.h>
#define _CRT_SECURE_NO_WARNINGS 1
void qsort(int* arr, int a, int b) 
{
	int piv = arr[(a + b) / 2];
	int l = a;
	int r = b;
	for (; l <= r; l++, r--) {
		for (; arr[l] < piv; l++) {}
		for (; arr[r] > piv; r--) {}
		if (l <= r) {
			int t = arr[l];
			arr[l] = arr[r];
			arr[r] = t;
		}
		else
			break;
	}
	if (a < r)
	{
		qsort(arr, a, r);
	}
	if (l < b)
	{
		qsort(arr, l, b);
	}
}
void qsortodin(int* arr1, int a, int b)
{
	int piv = arr1[(a + b) / 2];
	int l = a;
	int r = b;
	for (; l <= r; l++, r--) {
		for (; arr1[l] < piv; l++) {}
		for (; arr1[r] > piv; r--) {}
		if (l <= r) {
			int t = arr1[l];
			arr1[l] = arr1[r];
			arr1[r] = t;
		}
		else
			break;
	}
	if (a < r)
	{
		qsortodin(arr1, a, r);
	}
	if (l < b)
	{
		qsortodin(arr1, l, b);
	}
}
void qsortdva(int* arr2, int a, int b)
{
	int piv = arr2[(a + b) / 2];
	int l = a;
	int r = b;
	for (; l <= r; l++, r--) {
		for (; arr2[l] < piv; l++) {}
		for (; arr2[r] > piv; r--) {}
		if (l <= r) {
			int t = arr2[l];
			arr2[l] = arr2[r];
			arr2[r] = t;
		}
		else
			break;
	}
	if (a < r)
	{
		qsortdva(arr2, a, r);
	}
	if (l < b)
	{
		qsortdva(arr2, l, b);
	}
}
int main()
{
	setlocale(LC_ALL, "");
	int i = 0, piv, arr[1000], arr1[10000], arr2[100000];
	int n = sizeof(arr) / sizeof(int), n1 = sizeof(arr1) / sizeof(int), n2 = sizeof(arr2) / sizeof(int);
	for (i = 0; i < n; i++) {
		arr[i] = rand() % 1000000;
	}
	for (i = 0; i < n1; i++) {
		arr1[i] = rand() % 1000000;
	}
	for (i = 0; i < n2; i++) {
		arr2[i] = rand() % 1000000;
	}
	clock_t tic = clock();
	qsort(arr, 0, 1000 - 1);
	clock_t toc = clock();
	printf("Время - %f секунд (1к эл)\n", (double)(toc - tic) / CLOCKS_PER_SEC);
	clock_t tic1 = clock();
	qsortodin(arr1, 0, 10000 - 1);
	clock_t toc1 = clock();
	printf("Время - %f секунд (10к эл)\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);
	clock_t tic2 = clock();
	qsortdva(arr2, 0, 100000 - 1);
	clock_t toc2 = clock();
	printf("Время - %f секунд (100к эл)\n", (double)(toc2 - tic2) / CLOCKS_PER_SEC);
}

